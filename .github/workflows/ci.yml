name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

# CodeQLアクションに必要な権限を設定
permissions:
  actions: read
  contents: read
  security-events: write

env:
  PYTHON_VERSION: '3.11'

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run pre-commit hooks
      run: |
        pip install pre-commit
        pre-commit run --all-files
    
    - name: Run tests with coverage
      run: |
        python -m pytest --cov=app --cov-report=xml --cov-report=term-missing
      env:
        FLASK_ENV: testing
        DATABASE_PATH: ":memory:"
        REDIS_URL: redis://localhost:6379/0
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security-scan:
    runs-on: ubuntu-latest
    # セキュリティスキャンジョブに必要な権限を明示的に設定
    permissions:
      actions: read
      contents: read
      security-events: write
      
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
      continue-on-error: true  # セキュリティスキャンが失敗してもワークフローを継続
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
        category: 'trivy-fs-scan'
      continue-on-error: true  # アップロードが失敗してもワークフローを継続

  docker-build:
    runs-on: ubuntu-latest
    needs: [test, security-scan]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: namefortune-jp:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Test Docker image
      run: |
        docker run --rm -d --name test-container -p 5000:5000 namefortune-jp:latest
        sleep 30
        curl -f http://localhost:5000/healthz || exit 1
        docker stop test-container

  deploy:
    runs-on: ubuntu-latest
    needs: [test, security-scan, docker-build]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        # ここに実際のデプロイメントスクリプトを追加 